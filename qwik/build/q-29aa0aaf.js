import{d as o,F as c,H as t,g as d}from"./q-71956c83.js";const s=[{text:"Example",id:"example",level:3},{text:"Unprojected Slots",id:"unprojected-slots",level:2}],i={title:"Named Slots",meta:[],styles:[],links:[],frontmatter:{contributors:["manucorporat","adamdbradley","KenAKAFrosty"]}},h={title:"Named Slots",contributors:["manucorporat","adamdbradley","KenAKAFrosty"]};function a(n){const e=Object.assign({p:"p",h3:"h3",a:"a",span:"span",code:"code",h2:"h2"},n.components);return t(d,{children:[t(e.p,{children:"In simple cases, projection allows content from the parent component to be projected into the child component. In more complex cases there may be more than one content slot that needs to be projected. Having multiple content slots is achieved by naming them."}),`
`,t(e.h3,{id:"example",children:[t(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#example",children:t(e.span,{class:"icon icon-link"})}),"Example"]}),`
`,t(e.p,{children:["In this example, we have created ",t(e.code,{children:"<Collapsable>"})," component that toggles between open and closed states. Currently, when the ",t(e.code,{children:"<Collapsable>"})," is closed it shows content that was implemented within ",t(e.code,{children:"<Collapsable>"}),". Change that to an additional ",t(e.code,{children:"<Slot>"})," to project the ",t(e.code,{children:'q:slot="closed"'})," content from the parent instead."]}),`
`,t(e.h2,{id:"unprojected-slots",children:[t(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#unprojected-slots",children:t(e.span,{class:"icon icon-link"})}),"Unprojected Slots"]}),`
`,t(e.p,{children:["We have added console statements to show when individual components re-render. Notice that the ",t(e.code,{children:"<App>"})," component never re-renders on the client. Also notice that the ",t(e.code,{children:"<Collapsable>"})," projects only one content at a time. This means that when ",t(e.code,{children:"<App>"})," renders on the server it has to produce both default as well as ",t(e.code,{children:"closed"})," content that Qwik must serialize. The benefit is that when ",t(e.code,{children:"<Collapsable>"})," toggles between open and closed states, it does not need to re-render the ",t(e.code,{children:"<App>"})," component to recover the content that was projected into it."]})]})}function l(n={}){const{wrapper:e}=n.components||{};return e?t(e,Object.assign({},n,{children:t(a,n)})):a(n)}const p=()=>o(c,{children:o(l,{},3,null)},3,"J-F0sHDq");export{p as default,h as frontmatter,i as head,s as headings};
