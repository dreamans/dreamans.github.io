import{d as a,F as i,H as d,g as n}from"./q-71956c83.js";const s=[{text:"Deployments",id:"deployments",level:1},{text:"Adapters and Middleware",id:"adapters-and-middleware",level:2},{text:"Production build",id:"production-build",level:2},{text:"Advanced",id:"advanced",level:2},{text:"Add A New Deployment",id:"add-a-new-deployment",level:2},{text:"Add An Adapter",id:"add-an-adapter",level:3},{text:"Add Middleware",id:"add-middleware",level:3},{text:"Add To The Starter CLI",id:"add-to-the-starter-cli",level:3}],c={title:"Deployments",meta:[],styles:[],links:[],frontmatter:{contributors:["adamdbradley","samijaber","reemardelarosa","mhevery"]}},h={title:"Deployments",contributors:["adamdbradley","samijaber","reemardelarosa","mhevery"]};function r(t){const e=Object.assign({h1:"h1",a:"a",span:"span",p:"p",div:"div",pre:"pre",code:"code",h2:"h2",blockquote:"blockquote",h3:"h3",ul:"ul",li:"li"},t.components);return d(n,{children:[d(e.h1,{id:"deployments",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#deployments",children:d(e.span,{class:"icon icon-link"})}),"Deployments"]}),`
`,d(e.p,{children:"When it's time to deploy your application, Qwik comes with ready-to-use integration that make this so easy!"}),`
`,d(e.div,{"data-rehype-pretty-code-fragment":"",children:d(e.pre,{"data-language":"shell","data-theme":"default",children:d(e.code,{"data-language":"shell","data-theme":"default",children:d(e.span,{class:"line",children:[d(e.span,{style:{color:"#DCDCAA"},children:"npm"}),d(e.span,{style:{color:"#D4D4D4"},children:" "}),d(e.span,{style:{color:"#CE9178"},children:"run"}),d(e.span,{style:{color:"#D4D4D4"},children:" "}),d(e.span,{style:{color:"#CE9178"},children:"qwik"}),d(e.span,{style:{color:"#D4D4D4"},children:" "}),d(e.span,{style:{color:"#CE9178"},children:"add"})]})})})}),`
`,d(e.h2,{id:"adapters-and-middleware",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#adapters-and-middleware",children:d(e.span,{class:"icon icon-link"})}),"Adapters and Middleware"]}),`
`,d(e.p,{children:"Qwik City middleware is a glue code that connects server rendering framework (such as Cloudflare, Netlify, Vercel, Express etc.) with the Qwik City meta-framework."}),`
`,d(e.h2,{id:"production-build",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#production-build",children:d(e.span,{class:"icon icon-link"})}),"Production build"]}),`
`,d(e.p,{children:["When a new integration is added to the project, a ",d(e.code,{children:"build.server"})," script is added to the ",d(e.code,{children:"package.json"})," file. This script is used to build the project for production."]}),`
`,d(e.p,{children:"The only thing you need to do is to run the following command:"}),`
`,d(e.div,{"data-rehype-pretty-code-fragment":"",children:d(e.pre,{"data-language":"shell","data-theme":"default",children:d(e.code,{"data-language":"shell","data-theme":"default",children:d(e.span,{class:"line",children:[d(e.span,{style:{color:"#DCDCAA"},children:"npm"}),d(e.span,{style:{color:"#D4D4D4"},children:" "}),d(e.span,{style:{color:"#CE9178"},children:"run"}),d(e.span,{style:{color:"#D4D4D4"},children:" "}),d(e.span,{style:{color:"#CE9178"},children:"build"})]})})})}),`
`,d(e.blockquote,{children:[`
`,d(e.p,{children:["Under the hood, the ",d(e.code,{children:"build"})," script will execute, ",d(e.code,{children:"build.server"})," and ",d(e.code,{children:"build.client"})," scripts."]}),`
`]}),`
`,d(e.h2,{id:"advanced",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#advanced",children:d(e.span,{class:"icon icon-link"})}),"Advanced"]}),`
`,d(e.p,{children:["The ",d(e.code,{children:"requestHandler()"})," utility is what each of the above middleware bundles uses in order to translate their request/response to a standard format for Qwik City to use. This function can be used to provide middleware for specific server frameworks."]}),`
`,d(e.p,{children:["If there's middleware missing and you'd like it added, take a look at how the ",d(e.code,{children:"requestHandler()"})," utility is used to handle requests for each of the middleware source-code above. Better yet, we'd love to have your middleware contributions! ",d(e.a,{href:"https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/middleware",children:"PR's are welcome"}),"!"]}),`
`,d(e.h2,{id:"add-a-new-deployment",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#add-a-new-deployment",children:d(e.span,{class:"icon icon-link"})}),"Add A New Deployment"]}),`
`,d(e.p,{children:["Thanks for your interesting into adding a deployment integration to Qwik! We're more than happy to help you get started. Before we get too far, if there's already a deployment for what you're looking for, we'd ",d(e.a,{href:"https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters",children:"love to have you contribute to it"}),". If the deployment is not already available, let's add it!"]}),`
`,d(e.p,{children:"To start it's probably best to copy an existing adapters and middleware and modify it to fit your needs. A deployment is made up of a few different parts:"}),`
`,d(e.h3,{id:"add-an-adapter",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#add-an-adapter",children:d(e.span,{class:"icon icon-link"})}),"Add An Adapter"]}),`
`,d(e.p,{children:["An adapter is the term used to summarize the Vite config that needed for the special build configuration. Each server, whether it's a cloud-service or a custom server, has its own unique build configuration for a specific output the server uses. For example, ",d(e.a,{href:"/docs/deployments/cloudflare-pages/",children:"Cloudflare"}),", ",d(e.a,{href:"/docs/deployments/netlify-edge/",children:"Netlify"})," and ",d(e.a,{href:"/docs/deployments/node/",children:"Node.js Server"})," each have their own build configurations."]}),`
`,d(e.p,{children:"The adapter is really a Vite config, that's extending the base config. The base config is the same for all adapters, and the adapter config is the unique part for each server."}),`
`,d(e.ul,{children:[`
`,d(e.li,{children:d(e.a,{href:"https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters",children:"Adapters Source"})}),`
`]}),`
`,d(e.h3,{id:"add-middleware",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#add-middleware",children:d(e.span,{class:"icon icon-link"})}),"Add Middleware"]}),`
`,d(e.p,{children:"Middleware is the glue code that connects the server rendering framework (such as Cloudflare, Netlify, Vercel, Express etc.) with the Qwik City meta-framework. Each middleware is responsible for handling the request and response from the server and translating it to a standard format for Qwik City to use."}),`
`,d(e.p,{children:["Luckily Qwik City uses the standardized ",d(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Request",children:"Request"})," and ",d(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Response",children:"Response"})," interfaces, so the middleware is usually pretty minimal."]}),`
`,d(e.p,{children:["For middleware, you'll notice they each one calls the common ",d(e.code,{children:"@builder.io/qwik-city/middleware/request-handler"})," package. The job of each middleware is to translate the request and response to the standardized format that Qwik City request handler package uses."]}),`
`,d(e.ul,{children:[`
`,d(e.li,{children:d(e.a,{href:"https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/middleware",children:"Middleware Source"})}),`
`]}),`
`,d(e.h3,{id:"add-to-the-starter-cli",children:[d(e.a,{"aria-hidden":"true",tabindex:"-1",href:"#add-to-the-starter-cli",children:d(e.span,{class:"icon icon-link"})}),"Add To The Starter CLI"]}),`
`,d(e.p,{children:["The next step is to add the new adapter to the Starter CLI. For this step it's probably best to ping the core team on ",d(e.a,{href:"https://qwik.builder.io/chat",children:"Discord"})," to help you get started. The CLI is a great place to add the new adapter, because it's a great way to test the new adapter and make sure it's working as expected."]})]})}function l(t={}){const{wrapper:e}=t.components||{};return e?d(e,Object.assign({},t,{children:d(r,t)})):r(t)}const p=()=>a(i,{children:a(l,{},3,null)},3,"-yM3WsRb");export{p as default,h as frontmatter,c as head,s as headings};
