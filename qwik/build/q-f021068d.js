import{d as o,F as c,H as t,g as s}from"./q-71956c83.js";const i={title:"Recursive Store",meta:[],styles:[],links:[],frontmatter:{contributors:["adamdbradley","manucorporat","mhevery","corscheid","fkruczek"]}},l={title:"Recursive Store",contributors:["adamdbradley","manucorporat","mhevery","corscheid","fkruczek"]};function n(r){const e=Object.assign({p:"p",code:"code",a:"a",blockquote:"blockquote",strong:"strong"},r.components);return t(s,{children:[t(e.p,{children:"This example features a store that contains other objects rather than just primitives."}),`
`,t(e.p,{children:["Because ",t(e.code,{children:"useStore()"})," tracks deep reactivity by default, Arrays and Objects inside the store will also be reactive."]}),`
`,t(e.p,{children:["For ",t(e.a,{href:"/docs/components/state/#usestore",children:t(e.code,{children:"useStore()"})})," to track all nested properties, it needs to allocate a lot of ",t(e.a,{href:"/docs/concepts/reactivity/#proxy",children:"Proxy"})," objects. This can be a performance issue if you have a lot of nested properties."]}),`
`,t(e.p,{children:["In that case, you can pass the additional argument: ",t(e.code,{children:"{deep: false}"})," to ",t(e.code,{children:"useStore"})," to only track the top-level properties."]}),`
`,t(e.blockquote,{children:[`
`,t(e.p,{children:[t(e.strong,{children:"Your task:"})," Add ",t(e.code,{children:"{deep: false}"})," as a second argument to the ",t(e.a,{href:"/docs/components/state/#usestore",children:t(e.code,{children:"useStore()"})})," function and modify event handlers to assign new values to the top-level properties of the store."]}),`
`]})]})}function a(r={}){const{wrapper:e}=r.components||{};return e?t(e,Object.assign({},r,{children:t(n,r)})):n(r)}const h=()=>o(c,{children:o(a,{},3,null)},3,"yyDLM-Gv");export{h as default,l as frontmatter,i as head};
